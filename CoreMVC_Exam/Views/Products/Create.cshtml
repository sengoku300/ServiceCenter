@model CoreMVC_Exam.ViewModels.ProductFormViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Создание товара</h1>

@using (Html.BeginForm("Save", "Products"))
{
    @Html.ValidationSummary(true, "Please fix the following errors!")

    <!-- втроенная защита от CSRF - атаки -->
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(m => m.Product.Brand)
        @Html.TextBoxFor(m => m.Product.Brand, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Product.Brand)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Product.Model)
        @Html.TextBoxFor(m => m.Product.Model, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Product.Model)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Product.SerialNumber)
        @Html.TextBoxFor(m => m.Product.SerialNumber, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Product.SerialNumber)
    </div> 
    
    <div class="form-group">
        @Html.LabelFor(m => m.Product.Price)
        @Html.TextBoxFor(m => m.Product.Price, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Product.Price)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Categories)
        @Html.DropDownListFor(m => m.Product.Category.Name, new SelectList(Model.Categories, "Name", "Name"), "Select category", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Product.Category.Name)
    </div>

    @Html.HiddenFor(m => m.Product.ID)

    <button class="btn btn-primary">Опубликовать</button>

    <input class="btn" type="button" value="Отменить"
           onclick="@("window.location.href='" + @Url.Action("Index", "Products") + "'");" />
}


@section scripts{
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
}