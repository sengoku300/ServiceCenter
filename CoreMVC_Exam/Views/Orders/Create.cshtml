@model CoreMVC_Exam.ViewModels.OrderClientViewModel

@{
    ViewData["Title"] = "Create";
}

@if (@ViewBag.ClientID != 0)
{
    <h1>Здравствуйте, @Model.Client.FirstName @Model.Client.LastName !</h1>
}

<h1>Оформление заказа:</h1>

<hr />

@using (Html.BeginForm("Save", "Orders"))
{
    @Html.ValidationSummary(true, "Please fix the following errors!")

    <!-- втроенная защита от CSRF - атаки -->
    @Html.AntiForgeryToken()

    <h4>Товар:</h4>

    <div class="form-group">
        @Html.LabelFor(m => m.Product.Brand)
        @Html.TextBoxFor(m => m.Product.Brand, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Product.Brand)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Product.Model)
        @Html.TextBoxFor(m => m.Product.Model, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Product.Model)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Product.SerialNumber)
        @Html.TextBoxFor(m => m.Product.SerialNumber, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Product.SerialNumber)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Categories)
        @Html.DropDownListFor(m => m.Product.Category.Name, new SelectList(Model.Categories, "Name", "Name"), "Select category", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Product.Category.Name)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Product.Price)
        @Html.TextBoxFor(m => m.Product.Price, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Product.Price)
    </div>

    @if (@ViewBag.ClientID == 0)
    {
        <h4>Заполните личную анкету:</h4>

        <div class="form-group">
            @Html.LabelFor(m => m.Client.FirstName)
            @Html.TextBoxFor(m => m.Client.FirstName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Client.FirstName)
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Client.LastName)
            @Html.TextBoxFor(m => m.Client.LastName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Client.LastName)
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Client.Address)
            @Html.TextBoxFor(m => m.Client.Address, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Client.Address)
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Client.Email)
            @Html.TextBoxFor(m => m.Client.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Client.Email)
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Client.Phone)
            @Html.TextBoxFor(m => m.Client.Phone, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Client.Phone)
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Client.Passport)
            @Html.TextBoxFor(m => m.Client.Passport, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Client.Passport)
        </div>

        <div class="form-group">
            <label asp-for="Client.Birthday" class="control-label"></label>
            <input asp-for="Client.Birthday" class="form-control" />
            <span asp-validation-for="Client.Birthday" class="text-danger"></span>
        </div>

        @Html.HiddenFor(m => m.Client.ID)
    }

    <button class="btn btn-primary">Опубликовать</button>

    <input class="btn" type="button" value="Отменить"
           onclick="@("window.location.href='" + @Url.Action("Index", "Products") + "'");" />

           <br/>
           <br/>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
